// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PortfolioWebsite_Backend.Models.UserModel;

#nullable disable

namespace PortfolioWebsite_Backend.Migrations
{
    [DbContext(typeof(UserContext))]
    [Migration("20230731123908_User")]
    partial class User
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("PortfolioWebsite_Backend.Models.UserModel.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("AccessToken")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("PortfolioWebsite_Backend.Models.UserModel.User", b =>
                {
                    b.OwnsOne("PortfolioWebsite_Backend.Models.UserModel.ForgotPasswordToken", "ForgotPasswordToken", b1 =>
                        {
                            b1.Property<int>("Id")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("int");

                            b1.Property<DateTime>("CreatedAt")
                                .HasColumnType("datetime(6)");

                            b1.Property<DateTime>("ExpiresAt")
                                .HasColumnType("datetime(6)");

                            b1.Property<bool>("IsValidated")
                                .HasColumnType("tinyint(1)");

                            b1.Property<string>("Token")
                                .IsRequired()
                                .HasColumnType("longtext");

                            b1.Property<int>("UserId")
                                .HasColumnType("int");

                            b1.Property<int?>("UserId1")
                                .HasColumnType("int");

                            b1.HasKey("Id");

                            b1.HasIndex("UserId")
                                .IsUnique();

                            b1.HasIndex("UserId1");

                            b1.ToTable("ForgotPasswordTokens");

                            b1.WithOwner()
                                .HasForeignKey("UserId");

                            b1.HasOne("PortfolioWebsite_Backend.Models.UserModel.User", "User")
                                .WithMany()
                                .HasForeignKey("UserId1");

                            b1.Navigation("User");
                        });

                    b.OwnsOne("PortfolioWebsite_Backend.Models.UserModel.RefreshToken", "RefreshToken", b1 =>
                        {
                            b1.Property<int>("Id")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("int");

                            b1.Property<DateTime>("CreatedAt")
                                .HasColumnType("datetime(6)");

                            b1.Property<DateTime>("ExpiresAt")
                                .HasColumnType("datetime(6)");

                            b1.Property<string>("Token")
                                .IsRequired()
                                .HasColumnType("longtext");

                            b1.Property<int>("UserId")
                                .HasColumnType("int");

                            b1.Property<int?>("UserId1")
                                .HasColumnType("int");

                            b1.HasKey("Id");

                            b1.HasIndex("UserId")
                                .IsUnique();

                            b1.HasIndex("UserId1");

                            b1.ToTable("RefreshTokens");

                            b1.WithOwner()
                                .HasForeignKey("UserId");

                            b1.HasOne("PortfolioWebsite_Backend.Models.UserModel.User", "User")
                                .WithMany()
                                .HasForeignKey("UserId1");

                            b1.Navigation("User");
                        });

                    b.Navigation("ForgotPasswordToken");

                    b.Navigation("RefreshToken");
                });
#pragma warning restore 612, 618
        }
    }
}
